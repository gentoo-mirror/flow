# Copyright 1999-2015 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

EAPI="5"

inherit java-pkg-2

MY_PN=${PN%%-bin}
MY_P="${MY_PN}-${PV}"

DESCRIPTION="A project automation and build tool similar to Apache Ant and Apache Maven with a Groovy based DSL"
SRC_URI="http://services.gradle.org/distributions/${MY_P}-all.zip"
HOMEPAGE="http://www.gradle.org/"
LICENSE="Apache-2.0"
SLOT="${PV}"
KEYWORDS="~x86 ~amd64"

GRADLE_BUNDLED="=dev-java/ant-core-1.9.2"

COMMON_DEP="app-admin/eselect-gradle
	${GRADLE_BUNDLED}"

DEPEND="app-arch/zip
	${COMMON_DEP}"
RDEPEND=">=virtual/jdk-1.5
	${COMMON_DEP}"

IUSE="source doc examples"

S="${WORKDIR}/${MY_P}"

java_prepare() {
	delare -A packageToLib
	packageToLib[ant-core]=ant
	

	local jars=$(find lib -name '*.jar')
	while IFS= read -r -d '' jar; do
		for provided_jar in ${GRADLE_BUNDLED}; do
			local jar_name=${jar##*/}
			jar_name=${jar_name%-*}
			local provided_jar_name=${provided_jar##*/}
			local provided_jar_version=${provided_jar##*-}
			# This is buggy as it takes no revisions into account
			provided_jar_version=${provided_jar_version%%-*}
		    provided_jar_name=${provided_jar_name%-*} 
			if [[ ${jar_name} == ${provided_jar_name} ]] \
				|| [[ ${jar_name} == ${packageToLib[$provided_jar_name]} ]]; then
				rm "${jar}" || die
				local real_jar_name
				if [[ -n ${packageToLib[$provided_jar_name]} ]]; then
					real_jar_name=${packageToLib[$provided_jar_name]}
				else
					real_jar_name=${provided_jar_name}
				fi
				java-pkg_jar-from ${provided_jar_name} ${real_jar_name}.jar ${real_jar_name}-${provided_jar_version}.jar
			fi
		done
	done < <(find lib -name '*.jar' -type f -print0)
}

src_install() {
	local gradle_dir="${EROOT}usr/share/${PN}-${SLOT}"

	dodoc changelog.txt getting-started.html

	insinto "${gradle_dir}"

	# source
	if use source ; then
		java-pkg_dosrc src/*
	fi

	# docs
	if use doc ; then
		java-pkg_dojavadoc docs
	fi

	# examples
	if use examples ; then
		java-pkg_doexamples samples
	fi

	# jars in lib/
	# Note that we can't strip the version from the gradle jars,
	# because then gradle won't find them.
	cd lib || die "lib/ not found"
	for jar in *.jar; do
		java-pkg_newjar ${jar} ${jar}
	done

	# plugins in lib/plugins
	cd plugins
	java-pkg_jarinto ${JAVA_PKG_JARDEST}/plugins
	for jar in *.jar; do
		java-pkg_newjar ${jar} ${jar}
	done

	java-pkg_dolauncher "${P}" --main org.gradle.launcher.GradleMain --java_args "-Dgradle.home=${gradle_dir}/lib \${GRADLE_OPTS}"
}

pkg_postinst() {
	eselect gradle update ifunset
}

pkg_postrm() {
	eselect gradle update ifunset
}
