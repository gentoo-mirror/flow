From 272eb71322b902cc09c289a58e8fecf1c1173c18 Mon Sep 17 00:00:00 2001
From: Florian Schmaus <flo@geekplace.eu>
Date: Wed, 19 Jul 2023 12:34:02 +0200
Subject: [PATCH] testsuite: check if /proc/self/smaps exists

On Linux systems wehre CONFIG_PROC_PAGE_MONITOR is not enabled,
/proc/self/smaps does not exist causing the test suite to fail.

Instead, check for /proc/self/smaps and skip the tests if the file
does not exist.

Based on a patch from tobbs@opentrash.com posted to
procps@freelists.org (https://www.freelists.org/post/procps/Patch-Test-suite-fails-if-procpidsmaps-is-absent,1)
and applied by Gentoo (https://bugs.gentoo.org/583036).

Signed-off-by: Florian Schmaus <flo@geekplace.eu>
--- a/testsuite/pmap.test/pmap.exp
+++ b/testsuite/pmap.test/pmap.exp
@@ -45,26 +45,30 @@ set test "pmap device output quiet (qd)"
 spawn $pmap -qd $mypid
 expect_table $test $pmap_procname $pmap_device_items "\$"
 
-set test "pmap extended output"
-spawn $pmap -x $mypid
-expect_table $test $pmap_ext_header $pmap_ext_items $pmap_ext_footer
+if  { [ file readable "/proc/self/smaps" ] == 0 } {
+    unsupported "Skipping test which require pmap to access /proc/<pid>/smaps, because kernel seems to be compiled without CONFIG_PROC_PAGE_MONITOR."
+} else {
+    set test "pmap extended output"
+    spawn $pmap -x $mypid
+    expect_table $test $pmap_ext_header $pmap_ext_items $pmap_ext_footer
 
-# -X and -XX have no real format as its dependent on smaps
-set test "pmap extra extended output"
-spawn $pmap -X $mypid
-expect_table $test $pmap_generic_header "\[^=\]+" "\[= \]+"
+    # -X and -XX have no real format as its dependent on smaps
+    set test "pmap extra extended output"
+    spawn $pmap -X $mypid
+    expect_table $test $pmap_generic_header "\[^=\]+" "\[= \]+"
 
-set test "pmap double extra extended output"
-spawn $pmap -XX $mypid
-expect_table $test $pmap_generic_header "\[^=\]+" "\[= \]+"
+    set test "pmap double extra extended output"
+    spawn $pmap -XX $mypid
+    expect_table $test $pmap_generic_header "\[^=\]+" "\[= \]+"
 
-set test "pmap X with unreachable process"
-spawn $pmap -X 1
-expect_pass $test "$pmap_initname\$"
+    set test "pmap X with unreachable process"
+    spawn $pmap -X 1
+    expect_pass $test "$pmap_initname\$"
 
-set test "pmap XX with unreachable process"
-spawn $pmap -XX 1
-expect_pass $test "$pmap_initname\$"
+    set test "pmap XX with unreachable process"
+    spawn $pmap -XX 1
+    expect_pass $test "$pmap_initname\$"
+}
 
 set test "pmap finding shm"
 make_testshm_proc
-- 
2.41.0

